// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

enum PostStatus {
  PENDING    // status awal ketika user posting (warna kuning)
  SUCCESS    // status setelah admin menyetujui (warna hijau)
}

model User {
  user_id   String    @id @default(uuid())
  email     String    @unique
  password  String
  name      String?
  image     String
  role      Role      @default(USER)
  posts     Post[]    // relasi one-to-many: satu user bisa punya banyak post
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Post {
  post_id   String     @id @default(uuid())
  title     String     // judul postingan
  content   String?    // isi postingan
  status    PostStatus @default(PENDING) // default status adalah pending
  image     String
  post_note String?
  post_stat String?
  post_img  String?
  exp_after String
  exp_real  String
  author    User       @relation(fields: [authorId], references: [user_id])
  authorId  String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}


